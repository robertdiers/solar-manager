CREATE TABLE soyosource ( "value" double precision);
Insert into soyosource (value) values (0);
CREATE TABLE solar_kostal_batterypercent ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_batterypercent', 'time');
ALTER TABLE solar_kostal_batterypercent SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_batterypercent', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_batterypercent', INTERVAL '7 days');
CREATE TABLE solar_kostal_batteryflag ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_batteryflag', 'time');
ALTER TABLE solar_kostal_batteryflag SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_batteryflag', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_batteryflag', INTERVAL '7 days');
CREATE TABLE solar_kostal_inverter ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_inverter', 'time');
ALTER TABLE solar_kostal_inverter SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_inverter', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_inverter', INTERVAL '7 days');
CREATE TABLE solar_kostal_powertogrid ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_powertogrid', 'time');
ALTER TABLE solar_kostal_powertogrid SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_powertogrid', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_powertogrid', INTERVAL '7 days');
CREATE TABLE solar_idm_feedin ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_idm_feedin', 'time');
ALTER TABLE solar_idm_feedin SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_idm_feedin', INTERVAL '1 days');
SELECT add_retention_policy('solar_idm_feedin', INTERVAL '7 days');
CREATE TABLE solar_kostal_consumption_total ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_consumption_total', 'time');
ALTER TABLE solar_kostal_consumption_total SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_consumption_total', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_consumption_total', INTERVAL '7 days');
CREATE TABLE solar_kostal_generation_total ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_generation_total', 'time');
ALTER TABLE solar_kostal_generation_total SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_generation_total', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_generation_total', INTERVAL '7 days');
CREATE TABLE solar_kostal_surplus ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_surplus', 'time');
ALTER TABLE solar_kostal_surplus SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_surplus', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_surplus', INTERVAL '7 days');
CREATE TABLE solar_battery_chargestatus ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_battery_chargestatus', 'time');
ALTER TABLE solar_battery_chargestatus SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_battery_chargestatus', INTERVAL '1 days');
SELECT add_retention_policy('solar_battery_chargestatus', INTERVAL '7 days');
CREATE TABLE solar_soyosource ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_soyosource', 'time');
ALTER TABLE solar_soyosource SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_soyosource', INTERVAL '1 days');
SELECT add_retention_policy('solar_soyosource', INTERVAL '7 days');
CREATE TABLE solar_soyosource_inverter ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_soyosource_inverter', 'time');
ALTER TABLE solar_soyosource_inverter SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_soyosource_inverter', INTERVAL '1 days');
SELECT add_retention_policy('solar_soyosource_inverter', INTERVAL '7 days');
CREATE TABLE technical_room_temperature ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('technical_room_temperature', 'time');
ALTER TABLE technical_room_temperature SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('technical_room_temperature', INTERVAL '1 days');
SELECT add_retention_policy('technical_room_temperature', INTERVAL '7 days');
CREATE TABLE solar_battery_charger_power ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_battery_charger_power', 'time');
ALTER TABLE solar_battery_charger_power SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_battery_charger_power', INTERVAL '1 days');
SELECT add_retention_policy('solar_battery_charger_power', INTERVAL '7 days');
CREATE TABLE solar_battery_charger_today ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_battery_charger_today', 'time');
ALTER TABLE solar_battery_charger_today SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_battery_charger_today', INTERVAL '1 days');
SELECT add_retention_policy('solar_battery_charger_today', INTERVAL '7 days');
CREATE TABLE solar_kostal_dailyyield ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_kostal_dailyyield', 'time');
ALTER TABLE solar_kostal_dailyyield SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_kostal_dailyyield', INTERVAL '1 days');
SELECT add_retention_policy('solar_kostal_dailyyield', INTERVAL '7 days');
CREATE TABLE solar_byd_soc ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_soc', 'time');
ALTER TABLE solar_byd_soc SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_soc', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_soc', INTERVAL '7 days');
CREATE TABLE solar_byd_maxvolt ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_maxvolt', 'time');
ALTER TABLE solar_byd_maxvolt SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_maxvolt', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_maxvolt', INTERVAL '7 days');
CREATE TABLE solar_byd_minvolt ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_minvolt', 'time');
ALTER TABLE solar_byd_minvolt SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_minvolt', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_minvolt', INTERVAL '7 days');
CREATE TABLE solar_byd_soh ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_soh', 'time');
ALTER TABLE solar_byd_soh SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_soh', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_soh', INTERVAL '7 days');
CREATE TABLE solar_byd_maxtemp ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_maxtemp', 'time');
ALTER TABLE solar_byd_maxtemp SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_maxtemp', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_maxtemp', INTERVAL '7 days');
CREATE TABLE solar_byd_mintemp ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_mintemp', 'time');
ALTER TABLE solar_byd_mintemp SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_mintemp', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_mintemp', INTERVAL '7 days');
CREATE TABLE solar_byd_battemp ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_battemp', 'time');
ALTER TABLE solar_byd_battemp SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_battemp', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_battemp', INTERVAL '7 days');
CREATE TABLE solar_byd_error ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_error', 'time');
ALTER TABLE solar_byd_error SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_error', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_error', INTERVAL '7 days');
CREATE TABLE solar_byd_power ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_power', 'time');
ALTER TABLE solar_byd_power SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_power', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_power', INTERVAL '7 days');
CREATE TABLE solar_byd_diffvolt ( "time" timestamptz NOT NULL , "value" double precision );
SELECT create_hypertable('solar_byd_diffvolt', 'time');
ALTER TABLE solar_byd_diffvolt SET ( timescaledb.compress, timescaledb.compress_segmentby = 'time' );
SELECT add_compression_policy('solar_byd_diffvolt', INTERVAL '1 days');
SELECT add_retention_policy('solar_byd_diffvolt', INTERVAL '7 days');